services:
  traefik:
    image: "traefik:v2.9"
    command: # command: --api --providers.docker --accesslog --api.insecure=true # Enables the web UI and tells Traefik to listen to docker
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    # labels:
    #   - "traefik.http.routers.api.rule=Host(`instak.cfpt.info`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
    networks:
      - internal-network

  api:
    build: ./api
    labels:
      - traefik.enable=true
      - "traefik.http.routers.api.rule=Host(`api.instak.cfpt.info`)"
      - "traefik.http.routers.api.entrypoints=web"
    volumes:
      - ./api/src:/var/www/html
    networks:
      - internal-network
    depends_on:
      - traefik

  public:
    build: ./public
    volumes:
      - ./public/src:/usr/share/nginx/html
    labels:
      - traefik.enable=true
      - "traefik.http.routers.whoami.rule=Host(`instak.cfpt.info`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - internal-network
    depends_on:
      - traefik

  mongo:
    image: mongo
    restart: "unless-stopped"
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: instacfpt
    networks:
      - internal-network

  mongo-express:
    image: mongo-express
    restart: "unless-stopped"
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
    networks:
      - internal-network

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    ports:
      - "9100:9100"
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - internal-network

  mongo-exporter:
    image: percona/mongodb_exporter:0.39.0
    restart: unless-stopped
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: mongodb://admin:admin@mongo:27017
    command:
      - "--collect-all"
      - "--compatible-mode"
    networks:
      - internal-network

  prometheus:
    image: prom/prometheus:latest
    restart: "unless-stopped"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - internal-network

  grafana:
    image: grafana/grafana:latest
    restart: "unless-stopped"
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - internal-network

volumes:
  grafana-data:
  mongo-data:


networks:
  internal-network:
    driver: bridge
